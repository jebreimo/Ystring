##****************************************************************************
## Copyright Â© 2015 Jan Erik Breimo. All rights reserved.
## Created by Jan Erik Breimo on 2015-05-31.
##
## This file is distributed under the Simplified BSD License.
## License text is included with the source distribution.
##****************************************************************************
cmake_minimum_required(VERSION 2.8)
project(Ystring)

if(APPLE)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wall")
elseif(WIN32)
    add_definitions(-D_SCL_SECURE_NO_WARNINGS)
endif(APPLE)

if(MSVC)
    set(PUBLIC_HEADERS_ROOT_PLATFORM_SPECIFIC
        Utf16W.hpp
        )
    set(PUBLIC_HEADERS_UTF16_PLATFORM_SPECIFIC
        Utf16/Utf16WString.hpp
        )
    set(SOURCE_FILES_PLATFORM_SPECIFIC
        Utf16/Utf16WString.cpp
        )
else(MSVC)
    set(PUBLIC_HEADERS_ROOT_PLATFORM_SPECIFIC)
    set(PUBLIC_HEADERS_UTF16_PLATFORM_SPECIFIC)
    set(SOURCE_FILES_PLATFORM_SPECIFIC)
endif(MSVC)

set(PRIVATE_HEADERS
    DecoderResult.hpp
    Encoding.hpp
    EncodingInfo.hpp
    EscapeType.hpp
    FindFlags.hpp
    PlatformDetails.hpp
    Predicates.hpp
    PrivatePlatformDetails.hpp
    SplitFlags.hpp
    Utf8.hpp
    YstringDefinitions.hpp
    YstringException.hpp
    Encodings/Encodings.hpp
    Encodings/CodePageEncoding.hpp
    Encodings/Cp437.hpp
    Encodings/Iso8859_1.hpp
    Encodings/Windows1252.hpp
    Encoded/Appender.hpp
    Encoded/AppendEscaped.hpp
    Encoded/AppendUnescaped.hpp
    Encoded/BackslashUnescaper.hpp
    Encoded/DecoderAlgorithms.hpp
    Encoded/DecoderStringFunctions.hpp
    Encoded/DecoderStringFunctions-impl.hpp
    Encoded/Encoder.hpp
    Encoded/FixedLengthBackslashEscaper.hpp
    Encoded/ForwardDecoder.hpp
    Encoded/ReverseDecoder.hpp
    Encoded/VariableLengthBackslashEscaper.hpp
    Encoded/XmlEscaper.hpp
    Generic/StringReference.hpp
    Generic/GenericString.hpp
    Generic/GenericString-impl.hpp
    Generic/Range.hpp
    Generic/RangeAlgorithms.hpp
    Generic/StringTypeTraits.hpp
    Unicode/CaseConverter.hpp
    Unicode/CaseInsensitive.hpp
    Unicode/CharClass.hpp
    Unicode/CharMap.hpp
    Unicode/CharMappingTypes.hpp
    Unicode/StandardLowerCase.hpp
    Unicode/StandardTitleCase.hpp
    Unicode/StandardUpperCase.hpp
    Unicode/UnicodeChars.hpp
    Unicode/UnicodePredicates.hpp
    Utf8/DecodeUtf8.hpp
    Utf8/DecodeUtf8-impl.hpp
    Utf8/EncodeUtf8.hpp
    Utf8/EncodeUtf8-impl.hpp
    Utf8/Utf8Chars.hpp
    Utf8/Utf8Encoding.hpp
    Utf8/Utf8String.hpp
    Utf16/DecodeUtf16.hpp
    Utf16/DecodeUtf16-impl.hpp
    Utf16/EncodeUtf16.hpp
    Utf16/EncodeUtf16-impl.hpp
    Utf16/Utf16Encoding.hpp
    Utf32/DecodeUtf32.hpp
    Utf32/DecodeUtf32-impl.hpp
    Utf32/EncodeUtf32.hpp
    Utf32/EncodeUtf32-impl.hpp
    Utf32/Utf32Encoding.hpp
    Utilities/Algorithms.hpp
    Utilities/ArrayOutputIterator.hpp
    Utilities/CountingOutputIterator.hpp
    Utilities/Endian.hpp
    Utilities/Iterators.hpp
    Utilities/KeyFunctionAlgorithms.hpp
    Utilities/Union16.hpp
    Utilities/Union32.hpp
    Utilities/Utilities.hpp
    ${PUBLIC_HEADERS_ROOT_PLATFORM_SPECIFIC}
    ${PUBLIC_HEADERS_UTF16_PLATFORM_SPECIFIC}
    )

set(SOURCE_FILES
    EncodingInfo.cpp
    Predicates.cpp
    YstringException.cpp
    Encodings/Encodings.cpp
    Encodings/Cp437.cpp
    Encodings/Iso8859_1.cpp
    Encodings/Windows1252.cpp
    Unicode/CaseConverter.cpp
    Unicode/CharClass.cpp
    Unicode/CharMap.cpp
    Unicode/CharMappingTypes.cpp
    Utf8/EncodeUtf8.cpp
    Utf8/Utf8String.cpp
    ${SOURCE_FILES_PLATFORM_SPECIFIC}
    )

add_library(
    ${PROJECT_NAME} OBJECT
    ${PRIVATE_HEADERS}
    ${SOURCE_FILES}
    )
